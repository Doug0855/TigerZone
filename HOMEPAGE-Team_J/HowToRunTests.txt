Testing our Server-Client model implementation
1. Run the server locally by entering "./server.out 3333 < TigerZone_ServerCommands2" into the terminal
2. On another terminal run the the TigerZoneâ„¢ implementation by entering "./tiger.out localhost 3333 TIGERZONE TEAMJ IAMJ"
Note: The Challenge will end very quickly as only a few moves are executed. The mock server tests the client server communication flow logic by sending mock commands. Some of the commands are erronous and this test does not check for syntactically correct commands from either the server or client. This test will test that the Network Protocol is followed correctly.  

Unit Testing Process
A Unit Testing class was made in order to quickly run tests for each new object made. This class can be found in the UnitTester.h and UnitTester.cpp files. The UnitTester class tests the functionality of the Face, Tile, and the TileStack classes. It was mainly used early in the development process to make sure each module was working correctly on its own before implementing the other modules. The UnitTester class allowed us to quickly test and implement the smaller modules. Once the system grew and required larger and more specific tests, testing was implemented by how each group member saw fit. To test the whole system, files with commands were made to be used as input for the server. The server allows for manual commands which allowed us to send correct and incorrect messages to see how the system would handle each. 